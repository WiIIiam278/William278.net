//- Template for support ticket transcripts
extends sidebar-page

append styles
    link(rel='stylesheet' href='/transcript.css')
    link(rel='stylesheet' href='/atom-one-dark.css')

block sidebar-content
    div(id='sidebar-content')
        .transcript-details
            .detail-block
                h2 Ticket Transcript
                .transcript-pills
                    .pill-item
                        i(class='fa-solid fa-tag')
                        | #{transcript.ticket.project}
                    .pill-item
                        i(class='fa-solid fa-hashtag')
                        | ticket-#{transcript.ticket.id}
                    .pill-item
                        i(class='fa-solid fa-ticket')
                        | #{new Date(parseInt(transcript.ticket.open_timestamp)).toLocaleDateString()}
                    .pill-item
                        i(class='fa-solid fa-lock')
                        | #{new Date(parseInt(transcript.ticket.close_timestamp)).toLocaleDateString()}

            .detail-block
                h3 Topic
                | #{transcript.ticket.topic}

            .detail-block
                h3 Participants
                .transcript-participants
                    each participant in transcript.ticket.participants
                        - let user = transcript.users.find(user => user.id === participant)
                        - if (user)
                                .transcript-participant
                                    .participant-avatar
                                        img(class='user-avatar' src=user.pfp)
                                    .participant-text
                                        .participant-name
                                            | #{user.name}
                                            span(class='user-discriminator') ##{user.disambiguator}
                                        - if (transcript.ticket.creator === participant)
                                            .participant-pills
                                                .pill-item
                                                    i(class='fa-solid fa-user')
                                                    | Creator


block main-content
    div(id='page-breadcrumbs')
        a(href='/') Transcript
        span(class='item-divider') /
    h1(id='page-title') Ticket ##{transcript.ticket.id}
    .transcript-messages
        - let openTime = new Date(parseInt(transcript.ticket.open_timestamp));
        - let closeTime = new Date(parseInt(transcript.ticket.close_timestamp));
        .system-message
            i(class='fa-solid fa-ticket')
            span Ticket opened on #{openTime.toLocaleDateString()} at #{openTime.toLocaleTimeString()}

        mixin messageBlock(senderName='Unknown', senderNumbers='', senderImage='https://cdn.discordapp.com/embed/avatars/0.png', timestamp, messages)
            .message-block
                img(class='user-avatar' src=senderImage)
                .message-body
                    .message-details
                        span(class='user-name')
                            | #{senderName}
                            if (senderNumbers)
                                span(class='user-discriminator') ##{senderNumbers}
                        .message-timestamp
                            | #{timestamp.toLocaleString()}
                    .message-content
                        each message in messages
                            if (message.message)
                                .message
                                    for line in message.message.split('\n')
                                        | !{markdown.render(processor(line))}

                            if (message.embeds)
                                each embed in message.embeds
                                    .embed
                                        .embed-content
                                            if (embed.thumbnail)
                                                if (embed.title || embed.description || (embed.fields && embed.fields.length > 0) || embed.image)
                                                    .embed-thumbnail
                                                        img(src=embed.thumbnail.url)
                                                else
                                                    .embed-image
                                                        img(src=embed.thumbnail.url)
                                            if (embed.title)
                                                .embed-title
                                                    if (embed.url)
                                                        a(href=embed.url)
                                                            | #{markdown.renderInline(processor(embed.title))}
                                                    else
                                                        | #{markdown.renderInline(processor(embed.title))}
                                            if (embed.description)
                                                .embed-description
                                                    for line in embed.description.split('\n')
                                                        | !{markdown.renderInline(processor(line))}
                                            if (embed.fields)
                                                .embed-fields
                                                    each field in embed.fields
                                                        div(class='embed-field ' + (field.inline ? 'inline-true' : 'inline-false'))
                                                            if (field.name)
                                                                .field-name
                                                                    | #{markdown.renderInline(processor(field.name))}
                                                            if (field.value)
                                                                .field-value
                                                                    for line in field.value.split('\n')
                                                                        | !{markdown.render(processor(line))}
                                            - if (embed.image)
                                                .embed-image
                                                    img(src=embed.image.url)
                                            - if (embed.footer)
                                                .embed-footer
                                                    if (embed.footer.text)
                                                        | #{embed.footer.text}

                            if (message.attachments)
                                each attachmentId in message.attachments
                                    - let attachment = transcript.attachments.find(attachment => attachment.id === attachmentId)
                                    if (attachment)
                                        - let type = attachment.type ? attachment.type.split('\/')[0] : 'unknown'
                                        if (type === 'image')
                                            img(class='message-image' src=attachment.url alt=attachment.name onerror='this.src = "/assets/missing-image.png"')
                                        else if (type === 'video')
                                            video(class='message-video' controls)
                                                source(src=attachment.url type=attachment.type)
                                        else
                                            a(class='message-attachment' href=attachment.url download=attachment.name)
                                                i(class='fa-solid fa-file-arrow-down')
                                                | #{attachment.name}

        - let messages = [];
        - let currentUser = null;
        - let currentTimestamp = null;
        //- Mix-in the messages
        each message in transcript.messages
            - if (currentUser === null)
                - currentUser = message.user
            - if (currentTimestamp === null)
                - currentTimestamp = message.timestamp
            - else if (currentUser !== message.sender)
                - let sender = transcript.users.find(user => user.id === currentUser)
                - if (sender)
                    +messageBlock(sender.name, sender.disambiguator, sender.pfp, new Date(parseInt(message.timestamp)), messages)
                    - messages = []
            - let content = {message: null, attachments: null, embeds: null}
            - if (message.message)
                - content.message = message.message
            - if (message.attachments)
                - content.attachments = message.attachments
            - if (message.embeds)
                - content.embeds = message.embeds
            - messages.push(content)
            - currentTimestamp = message.timestamp
            - currentUser = message.sender

        //- Add remaining messages
        if (messages.length > 0 && currentUser && currentTimestamp)
            - let sender = transcript.users.find(user => user.id === currentUser)
            if (sender)
                +messageBlock(sender.name, sender.disambiguator, sender.pfp, new Date(parseInt(currentTimestamp)), messages)

        .system-message
            i(class='fa-solid fa-lock')
            span Ticket closed on #{closeTime.toLocaleDateString()} at #{closeTime.toLocaleTimeString()}

        br